;; Object gtags/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "gtags/"
  :tables (list 
   (semanticdb-table "gtags.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("google-xemacs" function nil nil [231 294]) ("if" code nil nil [296 377]) ("cl" include nil (dependency-file "c:/home/dashepar/app/emacs/lisp/emacs-lisp/cl.el") [379 392]) ("etags" include nil (dependency-file "c:/home/dashepar/app/emacs/lisp/progmodes/etags.el") [393 409]) ("google-emacs-utilities" include nil nil [410 443]) ("google-tags-default-mode" variable (:default-value (quote c++-mode)) nil [445 688]) ("google-tags-host-port-alist" variable (:default-value (quote ((c++-mode ("gtags.google.com" . 2223)) (java-mode ("gtags.google.com" . 2224)) (jde-mode ("gtags.google.com" . 2224)) (python-mode ("gtags.google.com" . 2225))))) nil [690 962]) ("google-tags-extensions-host-port-alist" variable (:default-value (quote (("cc" ("gtags.google.com" . 2223))))) nil [965 1199]) ("google-tags-callgraph-host-port-alist" variable (:default-value (quote ((c++-mode ("gtags.google.com" . 2233)) (java-mode ("gtags.google.com" . 2234)) (jde-mode ("gtags.google.com" . 2234)) (python-mode ("gtags.google.com" . 2235))))) nil [1201 1513]) ("google-tags-extensions-callgraph-host-port-alist" variable (:default-value (quote (("cc" ("gtags.google.com" . 2233))))) nil [1515 1788]) ("google-gtags-opcode-search-snippets" variable (:constant-flag t :default-value "$") nil [1790 1892]) ("google-gtags-opcode-search-tag" variable (:constant-flag t :default-value ":") nil [1894 1983]) ("google-gtags-opcode-search-tags-by-file" variable (:constant-flag t :default-value "@") nil [1985 2091]) ("google-tags-find-host-port-pair" function (:arguments ("caller-p" "buffer")) nil [2093 2866]) ("google-default-root" variable (:default-value "/home/build/google3/") nil [2868 3016]) ("google-source-root" variable nil nil [3018 3097]) ("google-tags-history" variable nil nil [3099 3164]) ("google-first-tag-matches" variable nil nil [3166 3271]) ("google-bias-to-header-files" variable nil nil [3273 3473]) ("find-google-source-root" function (:arguments ("buffername")) nil [3532 3707]) ("google-find-default-tag" function nil nil [3709 4633]) ("google-find-tag-tag" function (:arguments ("string")) nil [4635 5175]) ("google-generate-potential-filenames" function (:arguments ("filename" "default-filename")) nil [5177 5370]) ("google-select-from-files" function (:arguments ("filelist")) nil [5372 5523]) ("gtags-server-buffer-name" variable (:constant-flag t :default-value " *TAGS server*") nil [5525 5629]) ("tagrecord" type (:members ("tag" "data") :type "struct") nil [5724 5773]) ("tagrecord-data" function (:arguments ("tagrecord")) nil [5869 5921]) ("tagrecord-data" type (:members ("snippet" "filename" "filesize" "lineno" "offset") :type "struct") nil [5923 6014]) ("network-streams-ready" function (:arguments ("network-streams" "buffer-names")) nil [6016 6271]) ("google-send-tag-to-server" function (:arguments ("command" "buffer-name" "caller-p" "buffer")) nil [6273 7819]) ("google-find-tag" function (:user-visible-flag t :arguments ("tagname")) nil [7826 8002]) ("google-search-definition-snippets" function (:user-visible-flag t :arguments ("string")) nil [8004 8267]) ("google-search-caller-snippets" function (:user-visible-flag t :arguments ("string")) nil [8269 8526]) ("define-derived-mode" code nil nil [8529 8829]) ("google-visit-tagrecord" function (:arguments ("tagrecord" "push" "display-buffer")) nil [8831 10139]) ("google-visit-tag-under-point" function (:user-visible-flag t) nil [10141 10355]) ("define-key" code nil nil [10357 10438]) ("google-xemacs-visit-tag-under-point" function (:user-visible-flag t) nil [10440 10634]) ("if" code nil nil [10636 10851]) ("define-key" code nil nil [10852 10915]) ("define-key" code nil nil [10916 10989]) ("define-key" code nil nil [10990 11065]) ("define-key" code nil nil [11066 11129]) ("google-show-callers" function (:user-visible-flag t :arguments ("tagname")) nil [11131 11415]) ("google-show-callers-under-point" function (:user-visible-flag t) nil [11417 11581]) ("google-show-tag-locations-under-point" function (:user-visible-flag t) nil [11583 11986]) ("google-show-tag-locations" function (:user-visible-flag t :arguments ("tagname")) nil [11988 12446]) ("google-show-tag-locations-regexp" function (:user-visible-flag t :arguments ("tagname")) nil [12448 12929]) ("google-get-tags" function (:arguments ("command" "caller-p" "buffer")) nil [12931 13490]) ("memoize" code nil nil [13492 13518]) ("google-get-matches" function (:arguments ("regexp" "buffer")) nil [13520 13640]) ("google-get-unique-matches" function (:arguments ("opcode" "tagname" "regexp-predicate" "caller-p")) nil [13642 13901]) ("google-fetch-matches" function (:arguments ("pattern" "predicate" "buffer")) nil [13903 14101]) ("google-all-matching-completions" function (:arguments ("string" "predicate")) nil [14103 14278]) ("google-exact-match" function (:arguments ("string" "predicate")) nil [14280 14384]) ("google-longest-common-prefix" function (:arguments ("string1" "string2")) nil [14386 14666]) ("google-longest-common-prefix-multi" function (:arguments ("strings")) nil [14668 14770]) ("google-completion-collection-function" function (:arguments ("string" "predicate" "operation-type")) nil [14772 15446]) ("google-complete-tag" function (:user-visible-flag t) nil [15448 16718]) ("google-show-tag-locations-with-opcode" function (:arguments ("tagname" "regexp-pred" "caller-p" "prefix" "opcode")) nil [16720 18774]) ("google-show-tag-locations-inner" function (:arguments ("matches" "tagname" "buffer-name" "current-directory" "switch-windows-p" "&optional" "win")) nil [18776 20520]) ("define-derived-mode" code nil nil [20522 20630]) ("google-jump-to-tag-under-point" function (:user-visible-flag t) nil [20632 20797]) ("gnuemacs-narrow-by-filename" function (:arguments ("regexp")) nil [20799 21180]) ("xemacs-narrow-by-filename" function (:arguments ("regexp")) nil [21182 21635]) ("gnuemacs-show-all-overlays" function nil nil [21637 21774]) ("xemacs-show-all-overlays" function nil nil [21776 21893]) ("google-narrow-by-filename" function (:user-visible-flag t :arguments ("regexp")) nil [21895 22222]) ("google-show-all-results" function (:user-visible-flag t) nil [22224 22422]) ("define-key" code nil nil [22424 22515]) ("if" code nil nil [22516 22744]) ("define-key" code nil nil [22745 22809]) ("define-key" code nil nil [22810 22874]) ("google-show-matching-tags" function (:user-visible-flag t :arguments ("tagname")) nil [22876 23138]) ("google-list-tags" function (:user-visible-flag t :arguments ("filename")) nil [23140 23588]) ("google-show-matching-tags-inner" function (:arguments ("name" "opcode" "buffer-name" "use-tagrecords-p")) nil [23590 25066]) ("google-remove-google3-prefix" function (:arguments ("pathname")) nil [25068 26008]) ("test-google-remove-google3-prefix" function nil nil [26010 26264]) ("google-first-tag" function (:user-visible-flag t :arguments ("tagname")) nil [26266 26777]) ("google-next-tag" function (:user-visible-flag t) nil [26779 27141]) ("google-pop-tag" function (:user-visible-flag t) nil [27143 27569]) ("google-push-tag" function (:user-visible-flag t) nil [27571 27773]) ("gtags" package nil nil [27775 27791]))
    :file "gtags.el"
    :pointmax 27792
    :unmatched-syntax 'nil
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0pre4"
  :semanticdb-version "2.0pre4"
  )
