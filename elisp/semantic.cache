;; Object elisp/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "elisp/"
  :tables (list 
   (semanticdb-table "psvn.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("easymenu" include nil nil [9021 9040]) ("dired" include nil nil [9061 9077]) ("ediff-util" include nil nil [9098 9119]) ("elp" include nil nil [9140 9154]) ("pp" include nil nil [9175 9188]) ("condition-case" code nil nil [9191 9264]) ("svn-psvn-revision" variable (:constant-flag t :default-value "$Id: psvn.el 26501 2007-09-09 18:19:02Z xsteve $") nil [9266 9378]) ("svn-status-verbose" variable (:user-visible-flag t :default-value t) nil [9407 9570]) ("svn-log-edit-file-name" variable (:user-visible-flag t :default-value "++svn-log++") nil [9571 9787]) ("put" code nil nil [9788 9841]) ("svn-log-edit-insert-files-to-commit" variable (:user-visible-flag t :default-value t) nil [9842 9982]) ("svn-log-edit-use-log-edit-mode" variable (:user-visible-flag t :default-value (and (condition-case nil (require (quote log-edit)) (error nil)) t)) nil [9983 10235]) ("svn-log-edit-paragraph-start" variable (:user-visible-flag t :default-value "$\\|[ 	]*$\\|##.*$\\|\\*.*:.*$\\|[ 	]+(.+):.*$") nil [10236 10436]) ("svn-log-edit-paragraph-separate" variable (:user-visible-flag t :default-value "$\\|##.*$") nil [10437 10602]) ("svn-status-hide-unknown" variable (:user-visible-flag t) nil [10603 10795]) ("svn-status-hide-unmodified" variable (:user-visible-flag t) nil [10796 10997]) ("svn-status-sort-status-buffer" variable (:user-visible-flag t :default-value t) nil [10998 11306]) ("svn-status-ediff-delete-temporary-files" variable (:user-visible-flag t) nil [11308 11538]) ("svn-status-changelog-style" variable (:user-visible-flag t :default-value (quote changelog)) nil [11540 11959]) ("svn-status-unmark-files-after-list" variable (:user-visible-flag t :default-value (quote (commit revert))) nil [11961 12203]) ("svn-status-preserve-window-configuration" variable (:user-visible-flag t :default-value t) nil [12205 12338]) ("svn-status-auto-revert-buffers" variable (:user-visible-flag t :default-value t) nil [12340 12468]) ("svn-status-negate-meaning-of-arg-commands" variable (:user-visible-flag t :default-value (quote nil)) nil [12470 12794]) ("svn-status-svn-executable" variable (:user-visible-flag t :default-value "svn") nil [12796 13035]) ("put" code nil nil [13036 13092]) ("svn-status-default-export-directory" variable (:user-visible-flag t :default-value "~/") nil [13094 13230]) ("svn-status-svn-environment-var-list" variable (:user-visible-flag t :default-value (quote ("LC_MESSAGES=C" "LC_ALL="))) nil [13232 13805]) ("put" code nil nil [13806 13872]) ("svn-browse-url-function" variable nil nil [13874 15619]) ("svn-status-window-alist" variable (:default-value (quote ((diff "*svn-diff*") (log "*svn-log*") (info t) (blame t) (proplist t) (update t)))) nil [15720 16704]) ("svn-status-short-mod-flag-p" variable (:user-visible-flag t :default-value t) nil [16706 17368]) ("svn-status-debug-level" variable nil nil [17370 17573]) ("svn-bookmark-list" variable nil nil [17575 17676]) ("svn-status-buffer-name" variable (:default-value "*svn-status*") nil [17788 17867]) ("svn-process-buffer-name" variable (:default-value " *svn-process*") nil [17868 17951]) ("svn-log-edit-buffer-name" variable (:default-value "*svn-log-edit*") nil [17952 18037]) ("svn-status-use-header-line" variable (:user-visible-flag t :default-value (if (boundp (quote header-line-format)) t (quote inline))) nil [18039 18536]) ("svn-status-default-log-arguments" variable (:user-visible-flag t :default-value (quote ("-v"))) nil [18658 18867]) ("put" code nil nil [18868 18931]) ("svn-status-default-commit-arguments" variable (:user-visible-flag t :default-value (quote nil)) nil [18933 19378]) ("put" code nil nil [19379 19445]) ("svn-status-default-diff-arguments" variable (:user-visible-flag t :default-value (quote ("-x" "--ignore-eol-style"))) nil [19447 20064]) ("put" code nil nil [20065 20129]) ("svn-status-default-blame-arguments" variable (:user-visible-flag t :default-value (quote ("-x" "--ignore-eol-style"))) nil [20131 20371]) ("put" code nil nil [20373 20438]) ("svn-trac-project-root" variable nil nil [20440 20587]) ("svn-status-module-name" variable (:user-visible-flag t) nil [20589 20719]) ("svn-status-branch-list" variable (:user-visible-flag t) nil [20721 21182]) ("svn-status-load-state-before-svn-status" variable (:user-visible-flag t :default-value t) nil [21184 21328]) ("svn-log-link-handlers" variable nil nil [21330 21487]) ("svn-status-mode-hook" variable nil nil [21499 21576]) ("svn-log-edit-mode-hook" variable nil nil [21577 21658]) ("svn-log-edit-done-hook" variable nil nil [21659 21736]) ("svn-post-process-svn-output-hook" variable nil nil [21889 22064]) ("when" code nil nil [22066 22177]) ("svn-status-svn-process-coding-system" variable (:default-value (when (boundp (quote locale-coding-system)) locale-coding-system)) nil [22179 22392]) ("svn-status-svn-file-coding-system" variable (:default-value (quote undecided-unix)) nil [22394 22687]) ("svn-status-use-ido-completion" variable (:user-visible-flag t :default-value (fboundp (quote ido-completing-read))) nil [22689 22834]) ("svn-status-completing-read-function" variable (:default-value (if svn-status-use-ido-completion (quote ido-completing-read) (quote completing-read))) nil [22836 22955]) ("svn-status-track-user-input" variable nil nil [22983 23135]) ("svn-status-refresh-info" variable nil nil [23137 23247]) ("defgroup" code nil nil [23269 23340]) ("defgroup" code nil nil [23342 23398]) ("cl" include nil nil [23421 23434]) ("svn-xemacsp" variable (:constant-flag t :default-value (featurep (quote xemacs))) nil [23437 23478]) ("if" code nil nil [23481 23551]) ("svn-status-display-full-path" variable nil nil [23554 23758]) ("svn-status-prefix-key" variable (:default-value [(control x) (meta s)]) nil [23760 24318]) ("svn-admin-default-create-directory" variable (:user-visible-flag t :default-value "~/") nil [24320 24471]) ("svn-status-custom-hide-function" variable nil nil [24473 24634]) ("add-to-list" code nil nil [24816 24895]) ("svn-status-directory-history" variable nil nil [24920 25004]) ("svn-process-cmd" variable nil nil [25005 25033]) ("svn-status-info" variable nil nil [25034 25062]) ("svn-status-filename-to-buffer-position-cache" variable (:default-value (make-hash-table :test (quote equal) :weakness t)) nil [25063 25159]) ("svn-status-base-info" variable nil nil [25160 25240]) ("svn-status-initial-window-configuration" variable nil nil [25241 25293]) ("svn-status-default-column" variable (:default-value 23) nil [25294 25331]) ("svn-status-default-revision-width" variable (:default-value 4) nil [25332 25376]) ("svn-status-default-author-width" variable (:default-value 9) nil [25377 25419]) ("svn-status-line-format" variable (:default-value " %c%c%c %4s %4s %-9s") nil [25420 25474]) ("svn-start-of-file-list-line-number" variable nil nil [25475 25520]) ("svn-status-files-to-commit" variable nil nil [25521 25676]) ("svn-status-recursive-commit" variable nil nil [25677 25832]) ("svn-log-edit-update-log-entry" variable nil nil [25833 25978]) ("svn-status-pre-commit-window-configuration" variable nil nil [25979 26034]) ("svn-status-pre-propedit-window-configuration" variable nil nil [26035 26092]) ("svn-status-head-revision" variable nil nil [26093 26130]) ("svn-status-root-return-info" variable nil nil [26131 26171]) ("svn-status-property-edit-must-match-flag" variable nil nil [26172 26225]) ("svn-status-propedit-property-name" variable nil nil [26226 26327]) ("svn-status-propedit-file-list" variable nil nil [26328 26370]) ("svn-status-mode-line-process" variable nil nil [26371 26411]) ("svn-status-mode-line-process-status" variable nil nil [26412 26459]) ("svn-status-mode-line-process-edit-flag" variable nil nil [26460 26510]) ("svn-status-edit-svn-command" variable nil nil [26511 26551]) ("svn-status-update-previous-process-output" variable nil nil [26552 26606]) ("svn-pre-run-asynch-recent-keys" variable nil nil [26607 26650]) ("svn-pre-run-mode-line-process" variable nil nil [26651 26693]) ("svn-status-temp-dir" variable (:default-value (expand-file-name (or (when (boundp (quote temporary-file-directory)) temporary-file-directory) (when (fboundp (quote temp-directory)) (file-name-as-directory (temp-directory))) "/tmp/"))) nil [26694 27128]) ("svn-temp-suffix" variable (:default-value (make-temp-name ".")) nil [27274 27319]) ("put" code nil nil [27320 27366]) ("svn-status-temp-file-to-remove" variable nil nil [27367 27410]) ("put" code nil nil [27411 27472]) ("svn-status-temp-arg-file" variable (:default-value (concat svn-status-temp-dir "svn.arg" svn-temp-suffix)) nil [27473 27561]) ("put" code nil nil [27562 27617]) ("svn-status-options" variable nil nil [27618 27649]) ("svn-status-remote" variable nil nil [27650 27676]) ("svn-status-commit-rev-number" variable nil nil [27677 27718]) ("svn-status-update-rev-number" variable nil nil [27719 27760]) ("svn-status-operated-on-dot" variable nil nil [27761 27800]) ("svn-status-last-commit-author" variable nil nil [27801 27843]) ("svn-status-elided-list" variable nil nil [27844 27879]) ("svn-status-last-output-buffer-name" variable nil nil [27880 28017]) ("svn-status-pre-run-svn-buffer" variable nil nil [28018 28060]) ("svn-status-update-list" variable nil nil [28061 28096]) ("svn-transient-buffers" variable nil nil [28097 28127]) ("svn-ediff-windows" variable nil nil [28128 28154]) ("svn-ediff-result" variable nil nil [28155 28180]) ("svn-status-last-diff-options" variable nil nil [28181 28222]) ("svn-status-blame-file-name" variable nil nil [28223 28262]) ("svn-admin-last-repository-dir" variable nil nil [28263 28355]) ("svn-last-cmd-ring" variable (:default-value (make-ring 30)) nil [28356 28471]) ("svn-status-cached-version-string" variable nil nil [28472 28517]) ("svn-client-version" variable nil nil [28518 28593]) ("svn-status-get-line-information-for-file" variable nil nil [28594 28647]) ("svn-status-base-dir-cache" variable (:default-value (make-hash-table :test (quote equal) :weakness nil)) nil [28648 28727]) ("svn-log-registered-link-handlers" variable (:default-value (make-hash-table :test (quote eql) :weakness nil)) nil [28728 28812]) ("svn-status-partner-buffer" variable nil nil [28814 28901]) ("make-variable-buffer-local" code nil nil [28902 28957]) ("ediff-buffer-A" variable nil nil [29166 29189]) ("ediff-buffer-B" variable nil nil [29190 29213]) ("ediff-buffer-C" variable nil nil [29214 29237]) ("ediff-quit-hook" variable nil nil [29238 29262]) ("log-edit-initial-files" variable nil nil [29290 29321]) ("log-edit-callback" variable nil nil [29322 29348]) ("log-edit-listfun" variable nil nil [29349 29374]) ("ediff-after-quit-destination-buffer" variable nil nil [29574 29618]) ("svn-status-marked-face" variable (:default-value (quote ((((type tty) (class color)) (:foreground "green" :weight light)) (((class color) (background light)) (:foreground "green3")) (((class color) (background dark)) (:foreground "palegreen2")) (t (:weight bold))))) nil [30195 30548]) ("svn-status-marked-popup-face" variable (:default-value (quote ((((type tty) (class color)) (:foreground "green" :weight light)) (((class color) (background light)) (:foreground "green3")) (((class color) (background dark)) (:foreground "palegreen2")) (t (:weight bold))))) nil [30550 30902]) ("svn-status-update-available-face" variable (:default-value (quote ((((type tty) (class color)) (:foreground "magenta" :weight light)) (((class color) (background light)) (:foreground "magenta")) (((class color) (background dark)) (:foreground "yellow")) (t (:weight bold))))) nil [30904 31377]) ("svn-status-directory-face" variable (:default-value (quote ((((type tty) (class color)) (:foreground "lightblue" :weight light)) (((class color) (background light)) (:foreground "blue4")) (((class color) (background dark)) (:foreground "lightskyblue1")) (t (:weight bold))))) nil [31407 31816]) ("svn-status-filename-face" variable (:default-value (quote ((((class color) (background light)) (:foreground "chocolate")) (((class color) (background dark)) (:foreground "beige"))))) nil [31851 32163]) ("svn-status-symlink-face" variable (:default-value (quote ((((class color) (background light)) (:foreground "cornflower blue")) (((class color) (background dark)) (:foreground "cyan"))))) nil [32211 32612]) ("svn-status-locked-face" variable (:default-value (quote ((t (:weight bold :foreground "Red"))))) nil [32647 32820]) ("svn-status-switched-face" variable (:default-value (quote ((((class color) (background light)) (:foreground "CadetBlue")) (((class color) (background dark)) (:foreground "Aquamarine")) (t (:bold t :italic t))))) nil [32862 33185]) ("if" code nil nil [33187 33751]) ("svn-status-blame-rev-number-face" variable (:default-value (quote ((((class color) (background light)) (:foreground "DarkGoldenrod")) (((class color) (background dark)) (:foreground "LightGoldenrod")) (t (:weight bold :slant italic))))) nil [33753 34058]) ("svn-highlight" variable (:default-value t) nil [34060 34084]) ("svn-add-face" function (:arguments ("str" "face" "&optional" "keymap")) nil [34108 34813]) ("svn-status-maybe-add-face" function (:arguments ("condition" "text" "face")) nil [34815 34995]) ("svn-status-choose-face-to-add" function (:arguments ("condition" "text" "face1" "face2")) nil [34997 35207]) ("svn-status-maybe-add-string" function (:arguments ("condition" "string" "face")) nil [35209 35406]) ("defalias" code nil nil [35437 35529]) ("defalias" code nil nil [35530 35628]) ("defalias" code nil nil [35629 35739]) ("if" code nil nil [35762 35816]) ("defalias" code nil nil [35818 35886]) ("if" code nil nil [35900 36367]) ("if" code nil nil [36585 36839]) ("if" code nil nil [37305 38620]) ("svn-global-keymap" variable nil nil [38636 38763]) ("put" code nil nil [38764 38812]) ("when" code nil nil [38813 39855]) ("svn-status-diff-mode-map" variable nil nil [39857 39994]) ("put" code nil nil [39995 40050]) ("when" code nil nil [40068 40484]) ("svn-global-trac-map" variable nil nil [40486 40592]) ("put" code nil nil [40593 40643]) ("when" code nil nil [40660 41292]) ("defalias" code nil nil [41626 41673]) ("put" code nil nil [41742 41866]) ("svn-wc-adm-dir-name" function nil nil [41916 42119]) ("svn-log-edit-file-name" function (:arguments ("&optional" "curdir")) nil [42121 42443]) ("svn-status-message" function (:arguments ("level" "&rest" "args")) nil [42445 42831]) ("svn-status-flatten-list" function (:arguments ("list")) nil [42833 43050]) ("svn-status-window-line-position" function (:arguments ("w")) nil [43052 43303]) ("svn-checkout" function (:user-visible-flag t :arguments ("repos-url" "path")) nil [43320 43608]) ("defalias" code nil nil [43661 43696]) ("svn-status" function (:user-visible-flag t :arguments ("dir" "&optional" "arg")) nil [43713 45141]) ("svn-status-display-new-status-buffer" variable nil nil [45143 45192]) ("svn-status-1" function (:arguments ("dir" "&optional" "arg")) nil [45193 46894]) ("svn-status-this-directory" function (:user-visible-flag t :arguments ("arg")) nil [46896 47041]) ("svn-status-use-history" function (:user-visible-flag t) nil [47043 47833]) ("svn-had-user-input-since-asynch-run" function nil nil [47835 47942]) ("svn-process-environment" function nil nil [47944 48829]) ("svn-run" function (:arguments ("run-asynchron" "clear-process-buffer" "cmdtype" "&rest" "arglist")) nil [48831 53808]) ("svn-process-sentinel-fixup-path-seperators" function nil nil [53810 54134]) ("svn-process-sentinel" function (:arguments ("process" "event")) nil [54136 61574]) ("svn-process-handle-error-msg" variable nil nil [61576 61617]) ("svn-process-handle-error" function (:arguments ("error-msg")) nil [61618 61769]) ("svn-process-help-with-error-msg" function nil nil [61771 62377]) ("svn-process-filter" function (:arguments ("process" "str")) nil [62380 63449]) ("svn-revert-some-buffers" function (:user-visible-flag t :arguments ("&optional" "tree")) nil [63451 64570]) ("svn-parse-rev-num" function (:arguments ("str")) nil [64572 64728]) ("svn-status-make-ui-status" function nil nil [64730 65788]) ("svn-status-make-dummy-dirs" function (:arguments ("dir-list" "old-ui-information")) nil [65790 66727]) ("svn-status-make-line-info" function (:arguments ("&optional" "path" "ui" "file-mark" "prop-mark" "local-rev" "last-change-rev" "author" "update-mark" "locked-mark" "with-history-mark" "switched-mark" "locked-repo-mark" "psvn-extra-info")) nil [66729 67854]) ("svn-user-names-including-blanks" variable nil nil [67856 67948]) ("svn-status-parse-fixup-user-names-including-blanks" function nil nil [68113 68924]) ("svn-parse-status-result" function nil nil [68926 77423]) ("svn-status-sort-predicate" function (:arguments ("a" "b")) nil [77517 77797]) ("svn-status-remove-temp-file-maybe" function nil nil [77799 78207]) ("svn-status-remove-control-M" function (:user-visible-flag t) nil [78209 78516]) ("condition-case" code nil nil [78518 78737]) ("svn-status-mode-map" variable nil nil [78739 78814]) ("put" code nil nil [78815 78865]) ("svn-status-mode-mark-map" variable nil nil [78882 78977]) ("put" code nil nil [78978 79038]) ("svn-status-mode-property-map" variable nil nil [79055 79158]) ("put" code nil nil [79159 79219]) ("svn-status-mode-options-map" variable nil nil [79236 79336]) ("put" code nil nil [79337 79397]) ("svn-status-mode-trac-map" variable nil nil [79414 79523]) ("put" code nil nil [79524 79584]) ("svn-status-mode-extension-map" variable nil nil [79601 79713]) ("put" code nil nil [79714 79774]) ("svn-status-mode-branch-map" variable nil nil [79791 79893]) ("put" code nil nil [79894 79954]) ("when" code nil nil [79972 86028]) ("when" code nil nil [86029 87830]) ("when" code nil nil [87831 88243]) ("when" code nil nil [88244 89171]) ("when" code nil nil [89172 89856]) ("when" code nil nil [89857 90094]) ("easy-menu-define" code nil nil [90096 94693]) ("svn-status-file-popup-menu-list" variable (:default-value (quote (["open" svn-status-find-file-other-window t] ["svn diff" svn-status-show-svn-diff t] ["svn commit" svn-status-commit t] ["svn log" svn-status-show-svn-log t] ["svn blame" svn-status-blame t] ["mark" svn-status-set-user-mark t] ["unmark" svn-status-unset-user-mark t] ["svn add" svn-status-add-file t] ["svn add recursively" svn-status-add-file-recursively t] ["svn mv..." svn-status-mv t] ["svn rm..." svn-status-rm t] ["svn lock" svn-status-lock t] ["svn unlock" svn-status-unlock t] ["svn info" svn-status-info t]))) nil [94695 95366]) ("svn-status-popup-menu" function (:user-visible-flag t :arguments ("event")) nil [95497 96041]) ("svn-status-face-set-temporary-during-popup" function (:arguments ("face" "begin" "end" "menu" "&optional" "prefix")) nil [96043 96441]) ("svn-status-mode" function (:user-visible-flag t) nil [96443 97266]) ("svn-status-update-mode-line" function nil nil [97268 97463]) ("svn-status-bury-buffer" function (:user-visible-flag t :arguments ("arg")) nil [97465 98347]) ("svn-status-save-some-buffers" function (:user-visible-flag t :arguments ("&optional" "tree")) nil [98349 99453]) ("svn-status-find-files" function (:user-visible-flag t) nil [99455 99717]) ("svn-status-find-file-other-window" function (:user-visible-flag t) nil [99720 99989]) ("svn-status-find-file-other-window-noselect" function (:user-visible-flag t) nil [99991 100303]) ("svn-status-view-file-other-window" function (:user-visible-flag t) nil [100305 100574]) ("svn-status-find-file-or-examine-directory" function (:user-visible-flag t) nil [100576 101013]) ("svn-status-examine-parent" function (:user-visible-flag t) nil [101015 101168]) ("svn-status-mouse-find-file-or-examine-directory" function (:user-visible-flag t :arguments ("event")) nil [101170 101461]) ("svn-status-line-info->ui-status" function (:arguments ("line-info")) nil [101463 101652]) ("svn-status-line-info->has-usermark" function (:arguments ("line-info")) nil [101654 101734]) ("svn-status-line-info->user-elide" function (:arguments ("line-info")) nil [101735 101813]) ("svn-status-line-info->filemark" function (:arguments ("line-info")) nil [101815 101883]) ("svn-status-line-info->propmark" function (:arguments ("line-info")) nil [101884 101952]) ("svn-status-line-info->filename" function (:arguments ("line-info")) nil [101953 102021]) ("svn-status-line-info->filename-nondirectory" function (:arguments ("line-info")) nil [102022 102155]) ("svn-status-line-info->localrev" function (:arguments ("line-info")) nil [102156 102270]) ("svn-status-line-info->lastchangerev" function (:arguments ("line-info")) nil [102271 102466]) ("svn-status-line-info->author" function (:arguments ("line-info")) nil [102467 102618]) ("svn-status-line-info->update-available" function (:arguments ("line-info")) nil [102619 102842]) ("svn-status-line-info->locked" function (:arguments ("line-info")) nil [102843 103149]) ("svn-status-line-info->historymark" function (:arguments ("line-info")) nil [103150 103374]) ("svn-status-line-info->switched" function (:arguments ("line-info")) nil [103375 103597]) ("svn-status-line-info->repo-locked" function (:arguments ("line-info")) nil [103598 103842]) ("svn-status-line-info->psvn-extra-info" function (:arguments ("line-info")) nil [103843 104079]) ("svn-status-line-info->is-visiblep" function (:arguments ("line-info")) nil [104081 104716]) ("svn-status-line-info->hide-because-unknown" function (:arguments ("line-info")) nil [104718 104870]) ("svn-status-line-info->hide-because-custom-hide-function" function (:arguments ("line-info")) nil [104872 105051]) ("svn-status-line-info->hide-because-unmodified" function (:arguments ("line-info")) nil [105053 105698]) ("svn-status-line-info->hide-because-user-elide" function (:arguments ("line-info")) nil [105700 105819]) ("svn-status-line-info->show-user-elide-continuation" function (:arguments ("line-info")) nil [105821 105954]) ("svn-status-line-info->set-filemark" function (:arguments ("line-info" "value")) nil [105980 106078]) ("svn-status-line-info->set-propmark" function (:arguments ("line-info" "value")) nil [106080 106178]) ("svn-status-line-info->set-localrev" function (:arguments ("line-info" "value")) nil [106180 106278]) ("svn-status-line-info->set-author" function (:arguments ("line-info" "value")) nil [106280 106376]) ("svn-status-line-info->set-lastchangerev" function (:arguments ("line-info" "value")) nil [106378 106481]) ("svn-status-line-info->set-repo-locked" function (:arguments ("line-info" "value")) nil [106483 106585]) ("svn-status-line-info->set-psvn-extra-info" function (:arguments ("line-info" "value")) nil [106587 106693]) ("svn-status-copy-current-line-info" function (:user-visible-flag t :arguments ("arg")) nil [106695 107231]) ("svn-status-copy-filename-as-kill" function (:user-visible-flag t :arguments ("arg")) nil [107233 107659]) ("svn-status-get-child-directories" function (:user-visible-flag t :arguments ("&optional" "dir")) nil [107661 108342]) ("svn-status-toggle-elide" function (:user-visible-flag t :arguments ("arg")) nil [108344 110608]) ("svn-status-apply-elide-list" function (:user-visible-flag t) nil [110610 111817]) ("svn-status-update-with-command-list" function (:arguments ("cmd-list")) nil [111819 113598]) ("svn-status-annotate-status-buffer-entry" function (:arguments ("action" "line-info")) nil [113600 116048]) ("svn-status-parse-commit-output" function nil nil [116221 118252]) ("svn-status-parse-ar-output" function nil nil [118333 119336]) ("svn-status-parse-update-output" function nil nil [119440 121430]) ("svn-status-parse-property-output" function nil nil [121542 122157]) ("svn-status-line-info->symlink-p" function (:arguments ("line-info")) nil [122275 122694]) ("svn-status-line-info->directory-p" function (:arguments ("line-info")) nil [122696 122954]) ("svn-status-line-info->full-path" function (:arguments ("line-info")) nil [122956 123137]) ("svn-status-count-/" function (:arguments ("string")) nil [123192 123388]) ("svn-insert-line-in-status-buffer" function (:arguments ("line-info")) nil [123390 128753]) ("svn-status-redraw-status-buffer" function (:user-visible-flag t) nil [128755 129060]) ("svn-status-update-buffer" function (:user-visible-flag t) nil [129062 134012]) ("svn-status-parse-info" function (:user-visible-flag t :arguments ("arg")) nil [134014 134755]) ("svn-status-parse-info-result" function nil nil [134757 135639]) ("svn-status-base-info->url" function nil nil [135641 135813]) ("svn-status-base-info->repository-root" function nil nil [135815 136023]) ("svn-status-checkout-prefix-path" function (:user-visible-flag t) nil [136025 136883]) ("svn-status-ls" function (:user-visible-flag t :arguments ("path" "&optional" "synchron")) nil [136885 137193]) ("svn-status-ls-branches" function (:user-visible-flag t) nil [137195 137483]) ("svn-status-ls-tags" function (:user-visible-flag t) nil [137485 137761]) ("svn-status-toggle-edit-cmd-flag" function (:user-visible-flag t :arguments ("&optional" "reset")) nil [137763 138774]) ("svn-status-goto-root-or-return" function (:user-visible-flag t) nil [138776 139241]) ("svn-status-next-line" function (:user-visible-flag t :arguments ("nr-of-lines")) nil [139243 139680]) ("svn-status-previous-line" function (:user-visible-flag t :arguments ("nr-of-lines")) nil [139682 140131]) ("svn-status-dired-jump" function (:user-visible-flag t) nil [140133 140671]) ("svn-status-possibly-negate-meaning-of-arg" function (:arguments ("arg" "&optional" "command")) nil [140673 140977]) ("svn-status-update" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [140979 141360]) ("svn-status-get-line-information" function nil nil [141362 142173]) ("svn-status-get-file-list" function (:arguments ("use-marked-files")) nil [142176 142484]) ("svn-status-get-file-list-names" function (:arguments ("use-marked-files")) nil [142486 142630]) ("svn-status-get-file-information" function nil nil [142632 143218]) ("svn-status-select-line" function (:user-visible-flag t) nil [143220 143672]) ("svn-status-ensure-cursor-on-file" function nil nil [143674 143858]) ("svn-status-directory-containing-point" function (:arguments ("allow-self")) nil [143860 144544]) ("svn-status-line-info->directory-containing-line-info" function (:arguments ("line-info" "allow-self")) nil [144546 145090]) ("svn-status-set-user-mark" function (:user-visible-flag t :arguments ("arg")) nil [145092 145783]) ("svn-status-unset-user-mark" function (:user-visible-flag t :arguments ("arg")) nil [145785 146490]) ("svn-status-unset-user-mark-backwards" function (:user-visible-flag t) nil [146492 147011]) ("svn-status-apply-usermark" function (:arguments ("set-mark" "only-this-line")) nil [147013 149049]) ("svn-status-apply-usermark-checked" function (:arguments ("check-function" "set-mark")) nil [149051 149957]) ("svn-status-mark-unknown" function (:user-visible-flag t :arguments ("arg")) nil [149959 150303]) ("svn-status-mark-added" function (:user-visible-flag t :arguments ("arg")) nil [150305 150645]) ("svn-status-mark-modified" function (:user-visible-flag t :arguments ("arg")) nil [150647 151135]) ("svn-status-mark-deleted" function (:user-visible-flag t :arguments ("arg")) nil [151137 151496]) ("svn-status-mark-changed" function (:user-visible-flag t :arguments ("arg")) nil [151498 151917]) ("svn-status-unset-all-usermarks" function nil nil [151919 152037]) ("svn-status-regexp-history" variable nil nil [152039 152146]) ("svn-status-read-regexp" function (:arguments ("prompt")) nil [152148 152258]) ("svn-status-mark-filename-regexp" function (:user-visible-flag t :arguments ("regexp" "&optional" "unmark")) nil [152260 152774]) ("svn-status-mark-by-file-ext" function (:user-visible-flag t :arguments ("ext" "&optional" "unmark")) nil [152776 153369]) ("svn-status-toggle-hide-unknown" function nil nil [153371 153520]) ("svn-status-toggle-hide-unmodified" function nil nil [153522 153680]) ("svn-status-get-file-name-buffer-position" function (:arguments ("name")) nil [153682 154902]) ("svn-status-goto-file-name" function (:arguments ("name")) nil [154904 155180]) ("svn-status-find-info-for-file-name" function (:arguments ("name")) nil [155182 155501]) ("svn-status-marked-files" function nil nil [155503 156539]) ("svn-status-marked-file-names" function nil nil [156541 156649]) ("svn-status-some-files-marked-p" function nil nil [156651 157118]) ("svn-status-only-dirs-or-nothing-marked-p" function nil nil [157120 157573]) ("svn-status-ui-information-hash-table" function nil nil [157575 157989]) ("svn-status-create-arg-file" function (:arguments ("file-name" "prefix" "file-info-list" "postfix")) nil [157992 158321]) ("svn-status-show-process-buffer-internal" function (:arguments ("&optional" "scroll-to-top")) nil [158323 158730]) ("svn-status-show-process-output" function (:arguments ("cmd" "&optional" "scroll-to-top")) nil [158732 160407]) ("svn-status-svn-log-switches" function (:arguments ("arg")) nil [160409 160609]) ("svn-status-show-svn-log" function (:user-visible-flag t :arguments ("arg")) nil [160611 161466]) ("svn-status-version" function (:user-visible-flag t) nil [161468 162731]) ("svn-status-info" function (:user-visible-flag t) nil [162733 163030]) ("svn-status-info-for-path" function (:arguments ("path")) nil [163032 163708]) ("svn-status-blame" function (:user-visible-flag t :arguments ("revision")) nil [163710 164330]) ("svn-status-show-svn-diff" function (:user-visible-flag t :arguments ("arg")) nil [164332 165076]) ("svn-file-show-svn-diff" function (:user-visible-flag t :arguments ("arg")) nil [165078 165499]) ("svn-status-show-svn-diff-for-marked-files" function (:user-visible-flag t :arguments ("arg")) nil [165501 166145]) ("svn-status-diff-show-changeset" function (:arguments ("rev" "&optional" "user-confirmation")) nil [166147 166676]) ("svn-status-show-svn-diff-internal" function (:arguments ("line-infos" "recursive" "revision")) nil [166678 169055]) ("svn-status-diff-save-current-defun-as-kill" function (:user-visible-flag t) nil [169057 169437]) ("svn-status-diff-pop-to-commit-buffer" function (:user-visible-flag t) nil [169439 169867]) ("svn-status-activate-diff-mode" function nil nil [169869 170253]) ("define-derived-mode" code nil nil [170255 170626]) ("svn-status-diff-update" function (:user-visible-flag t :arguments ("arg" "noconfirm")) nil [170628 170895]) ("svn-status-show-process-buffer" function (:user-visible-flag t) nil [170897 171054]) ("svn-status-pop-to-partner-buffer" function (:user-visible-flag t) nil [171056 171352]) ("svn-status-pop-to-new-partner-buffer" function (:arguments ("buffer")) nil [171354 171603]) ("svn-status-add-file-recursively" function (:user-visible-flag t :arguments ("arg")) nil [171605 172133]) ("svn-status-add-file" function (:user-visible-flag t :arguments ("arg")) nil [172135 172733]) ("svn-status-lock" function (:user-visible-flag t :arguments ("arg")) nil [172735 173103]) ("svn-status-unlock" function (:user-visible-flag t :arguments ("arg")) nil [173105 173483]) ("svn-status-make-directory" function (:user-visible-flag t :arguments ("dir")) nil [173485 173918]) ("svn-status-mv" function (:user-visible-flag t) nil [173920 174689]) ("svn-status-cp" function (:user-visible-flag t) nil [174691 174800]) ("svn-status-mv-cp" function (:arguments ("command" "singleprompt" "manyprompt" "fallback")) nil [174802 179867]) ("svn-status-run-mv-cp" function (:arguments ("command" "original" "destination" "&optional" "force")) nil [179869 181025]) ("svn-status-revert" function (:user-visible-flag t) nil [181027 181706]) ("svn-status-rm" function (:user-visible-flag t :arguments ("force")) nil [181708 183103]) ("svn-status-update-cmd" function (:user-visible-flag t :arguments ("arg")) nil [183105 184233]) ("svn-status-commit" function (:user-visible-flag t) nil [184235 184943]) ("svn-status-pop-to-commit-buffer" function (:user-visible-flag t) nil [184945 185711]) ("svn-status-switch-to-status-buffer" function (:user-visible-flag t) nil [185713 185869]) ("svn-status-pop-to-status-buffer" function (:user-visible-flag t) nil [185871 186018]) ("svn-status-via-bookmark" function (:user-visible-flag t :arguments ("bookmark")) nil [186020 186567]) ("svn-status-export" function (:user-visible-flag t) nil [186569 187121]) ("svn-status-cleanup" function (:user-visible-flag t :arguments ("arg")) nil [187123 187658]) ("svn-status-resolved" function (:user-visible-flag t) nil [187660 188349]) ("svn-status-svnversion" function (:user-visible-flag t) nil [188352 189023]) ("svn-status-file-modified-after-save-flag" variable (:default-value 109) nil [189262 189468]) ("svn-status-after-save-hook" function nil nil [189469 191458]) ("add-hook" code nil nil [191460 191515]) ("svn-status-get-specific-revision" function (:user-visible-flag t :arguments ("arg")) nil [191713 192097]) ("svn-status-get-specific-revision-internal" function (:arguments ("line-infos" "revision" "handle-relative-svn-status-dir")) nil [192099 197563]) ("svn-status-ediff-with-revision" function (:user-visible-flag t :arguments ("arg")) nil [197565 198830]) ("svn-ediff-startup-hook" function nil nil [198832 199180]) ("svn-ediff-exit-hook" function (:arguments ("svn-buf" "tmp-bufs")) nil [199182 200305]) ("svn-status-read-revision-string" function (:user-visible-flag t :arguments ("prompt" "&optional" "default-value")) nil [200308 200480]) ("svn-file-show-svn-ediff" function (:user-visible-flag t :arguments ("arg")) nil [200482 200802]) ("svn-process-kill" function (:user-visible-flag t) nil [200997 201213]) ("svn-process-send-string" function (:user-visible-flag t :arguments ("string" "&optional" "send-passwd")) nil [201215 201788]) ("svn-process-send-string-and-newline" function (:user-visible-flag t :arguments ("string" "&optional" "send-passwd")) nil [201790 202409]) ("svn-status-property-list" function nil nil [202603 202893]) ("svn-status-proplist-start" function nil nil [202895 203125]) ("svn-status-property-edit-one-entry" function (:user-visible-flag t :arguments ("arg")) nil [203126 203381]) ("svn-status-property-set" function nil nil [203383 203517]) ("svn-status-property-delete" function nil nil [203519 203654]) ("svn-status-property-parse-property-names" function nil nil [203656 206238]) ("svn-status-property-edit" function (:arguments ("file-info-list" "prop-name" "&optional" "new-prop-value" "remove-values")) nil [206240 208136]) ("svn-status-property-set-property" function (:arguments ("file-info-list" "prop-name" "prop-value")) nil [208138 208712]) ("svn-status-get-directory" function (:arguments ("line-info")) nil [208715 209000]) ("svn-status-get-file-list-per-directory" function (:arguments ("files")) nil [209002 209570]) ("svn-status-property-ignore-file" function nil nil [209572 210360]) ("svn-status-property-ignore-file-extension" function nil nil [210362 211330]) ("svn-status-property-edit-svn-ignore" function nil nil [211332 211770]) ("svn-status-property-set-keyword-list" function (:user-visible-flag t) nil [211773 212033]) ("svn-status-property-set-keyword-id" function (:user-visible-flag t :arguments ("arg")) nil [212035 212400]) ("svn-status-property-set-keyword-date" function (:user-visible-flag t :arguments ("arg")) nil [212402 212777]) ("svn-status-property-set-eol-style" function (:user-visible-flag t) nil [212780 213133]) ("svn-status-property-set-executable" function (:user-visible-flag t) nil [213135 213337]) ("svn-status-property-set-mime-type" function (:user-visible-flag t) nil [213339 213911]) ("svn-prop-edit-mode-map" variable nil nil [214105 214186]) ("put" code nil nil [214187 214240]) ("when" code nil nil [214258 214790]) ("easy-menu-define" code nil nil [214792 215204]) ("svn-prop-edit-mode" function (:user-visible-flag t) nil [215206 215542]) ("svn-prop-edit-abort" function nil nil [215544 215680]) ("svn-prop-edit-done" function nil nil [215682 215753]) ("svn-prop-edit-do-it" function (:arguments ("async")) nil [215755 217216]) ("svn-prop-edit-svn-diff" function (:arguments ("arg")) nil [217218 217515]) ("svn-prop-edit-svn-log" function (:arguments ("arg")) nil [217517 217642]) ("svn-prop-edit-svn-status" function nil nil [217644 217755]) ("svn-log-edit-mode-map" variable nil nil [217948 218027]) ("put" code nil nil [218028 218080]) ("svn-log-edit-mode-menu" variable nil nil [218098 218129]) ("svn-log-edit-common-setup" function nil nil [218178 218372]) ("if" code nil nil [218374 219448]) ("when" code nil nil [219450 220207]) ("easy-menu-define" code nil nil [220209 220822]) ("put" code nil nil [220823 220876]) ("svn-log-edit-abort" function nil nil [220878 221011]) ("svn-log-edit-done" function (:user-visible-flag t) nil [221013 223102]) ("svn-log-edit-svn-diff" function (:user-visible-flag t :arguments ("arg")) nil [223104 223675]) ("svn-log-edit-svn-log" function (:arguments ("arg")) nil [223677 223801]) ("svn-log-edit-svn-status" function nil nil [223803 223913]) ("svn-log-edit-files-to-commit" function nil nil [223915 224024]) ("svn-log-edit-show-files-to-commit" function nil nil [224026 224226]) ("svn-log-edit-save-message" function (:user-visible-flag t) nil [224228 224548]) ("svn-log-edit-erase-edit-buffer" function (:user-visible-flag t) nil [224550 224728]) ("svn-log-edit-insert-files-to-commit" function nil nil [224730 225391]) ("svn-log-edit-remove-comment-lines" function nil nil [225393 225527]) ("svn-file-add-to-changelog" function (:user-visible-flag t :arguments ("prefix-arg")) nil [225529 226137]) ("svn-file-add-to-log-changelog-style" function (:user-visible-flag t :arguments ("curdir")) nil [226139 226540]) ("svn-dev-log-path-derive" function (:arguments ("path")) nil [226588 227262]) ("svn-file-add-to-log-svn-dev-style" function (:user-visible-flag t :arguments ("prefix-arg")) nil [227306 231064]) ("svn-log-view-mode-map" variable nil nil [231257 231336]) ("put" code nil nil [231337 231389]) ("when" code nil nil [231407 232233]) ("svn-log-view-popup-menu-map" variable nil nil [232235 232341]) ("put" code nil nil [232342 232400]) ("when" code nil nil [232417 232646]) ("easy-menu-define" code nil nil [232648 233048]) ("svn-log-view-popup-menu" function (:arguments ("event")) nil [233050 233351]) ("svn-log-view-font-lock-basic-keywords" variable (:default-value (quote (("^r[0-9]+ .+" (0 (\` (face font-lock-keyword-face mouse-face highlight keymap (\, svn-log-view-popup-menu-map)))))))) nil [233353 233603]) ("put" code nil nil [233604 233672]) ("svn-log-view-font-lock-keywords" variable nil nil [233690 233730]) ("define-derived-mode" code nil nil [233731 234291]) ("svn-log-view-next" function nil nil [234293 234480]) ("svn-log-view-prev" function nil nil [234482 234672]) ("svn-log-revision-at-point" function nil nil [234674 234828]) ("svn-log-file-name-at-point" function (:arguments ("respect-checkout-prefix-path")) nil [234830 235696]) ("svn-log-find-file-at-point" function nil nil [235698 236015]) ("svn-log-next-link" function (:user-visible-flag t) nil [236017 236367]) ("svn-log-prev-link" function (:user-visible-flag t) nil [236369 236744]) ("svn-log-view-diff" function (:user-visible-flag t :arguments ("arg")) nil [236746 236977]) ("svn-log-get-specific-revision" function (:user-visible-flag t) nil [236979 237389]) ("svn-log-ediff-specific-revision" function (:user-visible-flag t) nil [237391 238820]) ("svn-log-edit-log-entry" function (:user-visible-flag t) nil [238822 239589]) ("svn-log-link-keymap" variable nil nil [239643 239736]) ("put" code nil nil [239737 239787]) ("when" code nil nil [239804 240068]) ("svn-log-resolve-mouse-link" function (:arguments ("event")) nil [240070 240183]) ("svn-log-resolve-link" function nil nil [240185 240792]) ("svn-log-register-link-handler" function (:arguments ("handler-id" "link-regexp" "handler-function")) nil [240794 241807]) ("svn-log-resolve-trac-ticket-short" function (:user-visible-flag t :arguments ("link-name")) nil [242099 242364]) ("svn-log-register-link-handler" code nil nil [242420 242515]) ("svn-info-mode-map" variable nil nil [242777 242848]) ("put" code nil nil [242849 242897]) ("when" code nil nil [242915 243372]) ("svn-info-mode" function (:user-visible-flag t) nil [243374 243619]) ("svn-info-show-context" function (:user-visible-flag t) nil [243621 244546]) ("unless" code nil nil [244741 244885]) ("svn-blame-mode-map" variable nil nil [244887 244960]) ("put" code nil nil [244961 245010]) ("when" code nil nil [245028 245700]) ("easy-menu-define" code nil nil [245702 246166]) ("or" code nil nil [246168 246321]) ("make-variable-buffer-local" code nil nil [246323 246367]) ("svn-blame-mode" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [246369 247027]) ("svn-status-activate-blame-mode" function nil nil [247029 248670]) ("svn-blame-open-source-file" function (:user-visible-flag t) nil [248672 249024]) ("svn-blame-rev-at-point" function nil nil [249026 249257]) ("svn-blame-show-changeset" function (:user-visible-flag t :arguments ("arg")) nil [249259 249497]) ("svn-blame-show-log" function (:user-visible-flag t :arguments ("arg")) nil [249499 250122]) ("svn-blame-highlight-line-maybe" function (:arguments ("compare-func")) nil [250124 251395]) ("svn-blame-highlight-author-field" function (:arguments ("ov")) nil [251397 251478]) ("svn-blame-highlight-author" function (:user-visible-flag t) nil [251480 251652]) ("svn-blame-highlight-revision-field" function (:arguments ("ov")) nil [251654 251736]) ("svn-blame-highlight-revision" function (:user-visible-flag t) nil [251738 251916]) ("svn-process-mode-map" variable nil nil [252106 252183]) ("put" code nil nil [252184 252235]) ("when" code nil nil [252253 252542]) ("easy-menu-define" code nil nil [252544 252883]) ("svn-process-mode" function (:user-visible-flag t) nil [252885 253328]) ("svn-status-repo-for-path" function (:arguments ("directory")) nil [253532 254747]) ("svn-status-base-dir" function (:arguments ("&optional" "start-directory")) nil [254749 256837]) ("svn-status-base-dir-for-ancient-svn-client" function (:arguments ("&optional" "start-directory")) nil [256839 257758]) ("svn-status-save-state" function (:user-visible-flag t) nil [257760 258588]) ("svn-status-load-state" function (:user-visible-flag t :arguments ("&optional" "no-error")) nil [258590 260040]) ("svn-status-toggle-sort-status-buffer" function (:user-visible-flag t) nil [260042 260573]) ("svn-status-toggle-svn-verbose-flag" function (:user-visible-flag t) nil [260575 260812]) ("svn-status-toggle-display-full-path" function (:user-visible-flag t) nil [260814 261187]) ("svn-status-set-trac-project-root" function nil nil [261189 261519]) ("svn-status-set-module-name" function (:user-visible-flag t) nil [261521 261869]) ("svn-status-set-changelog-style" function (:user-visible-flag t) nil [261871 262375]) ("svn-status-set-branch-list" function (:user-visible-flag t) nil [262377 262758]) ("svn-browse-url" function (:arguments ("url")) nil [262760 263003]) ("svn-trac-browse-wiki" function (:user-visible-flag t) nil [263204 263440]) ("svn-trac-browse-timeline" function (:user-visible-flag t) nil [263442 263690]) ("svn-trac-browse-roadmap" function (:user-visible-flag t) nil [263692 263937]) ("svn-trac-browse-source" function (:user-visible-flag t) nil [263939 264185]) ("svn-trac-browse-report" function (:user-visible-flag t :arguments ("arg")) nil [264187 264546]) ("svn-trac-browse-changeset" function (:user-visible-flag t :arguments ("changeset-nr")) nil [264548 264894]) ("svn-trac-browse-ticket" function (:user-visible-flag t :arguments ("ticket-nr")) nil [264896 265224]) ("svn-resolve-conflicts-ediff" function (:user-visible-flag t :arguments ("&optional" "name-A" "name-B")) nil [265388 268741]) ("svn-resolve-conflicts" function (:arguments ("filename")) nil [268743 268975]) ("svn-status-resolve-conflicts" function (:user-visible-flag t) nil [268977 269371]) ("svn-branch-select" function (:user-visible-flag t :arguments ("&optional" "prompt")) nil [269568 270510]) ("svn-branch-diff" function (:user-visible-flag t :arguments ("branch1" "branch2")) nil [270512 270976]) ("svn-admin-create" function (:user-visible-flag t :arguments ("dir")) nil [271168 271644]) ("svn-admin-create-trunk-directory" function (:user-visible-flag t) nil [271793 272381]) ("svn-admin-start-import" function (:user-visible-flag t) nil [272383 273135]) ("svn-status-elp-init" function nil nil [273483 273689]) ("svn-status-last-commands" function (:user-visible-flag t :arguments ("&optional" "string-prefix")) nil [273691 274064]) ("svn-insert-indented-lines" function (:arguments ("text")) nil [274252 274435]) ("svn-prepare-bug-report" function (:user-visible-flag t) nil [274437 275732]) ("svn-prepare-for-reload-dont-touch-list" variable (:default-value (quote nil)) nil [276379 276507]) ("svn-prepare-for-reload-variables-list" variable (:default-value (quote (svn-global-keymap svn-status-diff-mode-map svn-global-trac-map svn-status-mode-map svn-status-mode-property-map svn-status-mode-extension-map svn-status-mode-options-map svn-status-mode-trac-map svn-status-mode-branch-map svn-log-edit-mode-map svn-log-view-mode-map svn-log-view-popup-menu-map svn-info-mode-map svn-blame-mode-map svn-process-mode-map))) nil [276508 277184]) ("svn-prepare-for-reload" function (:user-visible-flag t) nil [277185 277813]) ("psvn" package nil nil [277815 277830]))
    :file "psvn.el"
    :pointmax 277907
    :unmatched-syntax '((thing 36839 . 36840) (thing 36566 . 36582) (thing 36565 . 36566) (thing 35816 . 35817) (thing 35742 . 35759) (thing 35741 . 35742) (thing 23551 . 23552) (thing 23402 . 23418) (thing 23401 . 23402) (thing 9188 . 9189) (thing 9157 . 9174) (thing 9156 . 9157) (thing 9154 . 9155) (thing 9122 . 9139) (thing 9121 . 9122) (thing 9119 . 9120) (thing 9080 . 9097) (thing 9079 . 9080) (thing 9077 . 9078) (thing 9043 . 9060) (thing 9042 . 9043))
    )
   (semanticdb-table "cpp-font-lock.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("font-lock" include nil nil [1568 1588]) ("cc-mode" include nil nil [1644 1662]) ("c-initialize-cc-mode" code nil nil [1663 1685]) ("cl" include nil nil [1702 1715]) ("cpp-font-lock-version" variable (:constant-flag t :default-value "0.4.0") nil [1770 1842]) ("cpp-font-lock-comment-face" variable (:default-value (quote cpp-font-lock-comment-face)) nil [2031 2129]) ("cpp-font-lock-preprocessor-face" variable (:default-value (quote cpp-font-lock-preprocessor-face)) nil [2131 2254]) ("cpp-font-lock-function-name-face" variable (:default-value (quote cpp-font-lock-function-name-face)) nil [2256 2378]) ("cpp-font-lock-keyword-face" variable (:default-value (quote cpp-font-lock-keyword-face)) nil [2380 2482]) ("cpp-font-lock-literal-face" variable (:default-value (quote cpp-font-lock-literal-face)) nil [2484 2586]) ("cpp-font-lock-preprocessor-face" variable (:default-value (quote cpp-font-lock-preprocessor-face)) nil [2588 2711]) ("cpp-font-lock-type-name-face" variable (:default-value (quote cpp-font-lock-type-name-face)) nil [2713 2840]) ("cpp-font-lock-variable-name-face" variable (:default-value (quote cpp-font-lock-variable-name-face)) nil [2842 2977]) ("defgroup" code nil nil [3072 3203]) ("cpp-font-lock-comment-face" variable (:default-value (quote ((((class color) (background light)) (:foreground "FireBrick")) (((class color)) (:foreground "LightPink")) (t (:inverse-video t))))) nil [3205 3461]) ("cpp-font-lock-function-name-face" variable (:default-value (quote ((((class color) (background light)) (:foreground "DarkBlue")) (((class color)) (:foreground "NavajoWhite1")) (t (:inverse-video t))))) nil [3463 3733]) ("cpp-font-lock-keyword-face" variable (:default-value (quote ((((class color) (background light)) (:foreground "Blue" :bold t)) (((class color)) (:foreground "SkyBlue" :bold t)) (t (:inverse-video t))))) nil [3735 4000]) ("cpp-font-lock-literal-face" variable (:default-value (quote ((((class color) (background light)) (:foreground "ForestGreen")) (((class color)) (:foreground "SpringGreen")) (t (:inverse-video t))))) nil [4002 4263]) ("cpp-font-lock-preprocessor-face" variable (:default-value (quote ((((class color) (background light)) (:foreground "gray40")) (((class color)) (:foreground "cyan2")) (t (:inverse-video t))))) nil [4265 4534]) ("cpp-font-lock-type-name-face" variable (:default-value (quote ((((class color) (background light)) (:foreground "maroon4")) (((class color)) (:foreground "DarkSeaGreen1")) (t (:inverse-video t))))) nil [4536 4798]) ("cpp-font-lock-variable-name-face" variable (:default-value (quote ((((class color) (background light)) (:foreground "SaddleBrown")) (((class color)) (:foreground "NavajoWhite1")) (t (:inverse-video t))))) nil [4800 5073]) ("cpp-font-lock-find-face" function (:arguments ("face-name")) nil [5139 5272]) ("cpp-font-lock-use-font-lock-faces" function (:arguments ("toggle")) nil [5369 6725]) ("cpp-font-lock-ws-re" variable (:constant-flag t :default-value "[ 	
]") nil [6812 6852]) ("cpp-font-lock-word-re" variable (:constant-flag t :default-value "[a-zA-Z_:~][a-zA-Z0-9_:\\-]*") nil [6970 7033]) ("cpp-font-lock-extra-types" variable (:user-visible-flag t :default-value (concat cpp-font-lock-word-re "_t\\|" (eval-when-compile (regexp-opt (quote ("auto_ptr" "bitset" "bit_vector" "complex" "const_iterator" "const_reverse_iterator" "deque" "hash_map" "hash_multimap" "hash_set" "hash_multiset" "ifstream" "iostream" "ios" "istream" "istringstream" "iterator" "list" "map" "multimap" "multiset" "ofstream" "ostringstream" "ostream" "priority_queue" "queue" "reverse_iterator" "set" "size_type" "slist" "stack" "streambuf" "string" "type_info" "valarray" "vector" "wstring")))))) nil [7239 8199]) ("cpp-font-lock-match-c++-style-declaration-item-and-skip-to-next" function (:arguments ("limit")) nil [8628 9629]) ("cpp-font-lock-match-structor-declaration" function (:arguments ("limit")) nil [9881 10404]) ("cpp-font-lock-match-member-function-declaration" function (:arguments ("buffer-size")) nil [10956 11923]) ("cpp-font-lock-match-variable-declarations" function (:arguments ("buffer-size")) nil [12450 12985]) ("cpp-font-lock-match-literal" function (:arguments ("buffer-size")) nil [13131 13873]) ("let*" code nil nil [13876 21931]) ("cpp-font-lock-keywords" variable (:default-value cpp-font-lock-keywords-3) nil [21933 22077]) ("put" code nil nil [22144 22347]) ("make-local-variable" code nil nil [22348 22389]) ("cpp-font-lock-defaults" function nil nil [22458 22808]) ("add-hook" code nil nil [22809 22858]) ("add-hook" code nil nil [22903 22954]) ("cpp-font-lock" package nil nil [22979 23003]))
    :file "cpp-font-lock.el"
    :pointmax 23004
    )
   (semanticdb-table "regex-tool.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("defgroup" code nil nil [2020 2130]) ("regex-tool-mode-map" variable (:default-value (make-sparse-keymap)) nil [2132 2181]) ("regex-tool-mode-abbrev-table" variable nil nil [2182 2219]) ("define-derived-mode" code nil nil [2221 2552]) ("regex-tool-matched-face" variable (:default-value (quote ((((background light)) (:foreground "Red" :bold t)) (((background dark)) (:foreground "Orange" :bold t))))) nil [2554 2726]) ("regex-tool-backend" variable (:default-value (quote emacs)) nil [2728 3042]) ("regex-render-perl" function (:arguments ("regex" "sample")) nil [3044 3536]) ("regex-expr-buffer" variable nil nil [3538 3568]) ("regex-text-buffer" variable nil nil [3569 3599]) ("regex-group-buffer" variable nil nil [3600 3631]) ("regex-tool" function nil nil [3633 4292]) ("regex-tool-markup-text" function (:arguments ("&optional" "beg" "end" "len")) nil [4294 6074]) ("regex-tool-quit" function nil nil [6076 6238]) ("regex-tool" package nil nil [6240 6261]))
    :file "regex-tool.el"
    :pointmax 6290
    )
   (semanticdb-table "cygwin-mount.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("cygwin-mount-version" variable (:constant-flag t :default-value "1.4.8") nil [4276 4315]) ("defgroup" code nil nil [4317 4432]) ("cygwin-mount-program" variable (:constant-flag t :default-value "mount.exe") nil [4453 4496]) ("cygwin-mount-uname-program" variable (:constant-flag t :default-value "uname.exe") nil [4497 4546]) ("cygwin-mount-buffername" variable (:constant-flag t :default-value " *mount*") nil [4547 4592]) ("cygwin-mount-table--internal" variable nil nil [4725 4840]) ("cygwin-mount-cygdrive-prefix--internal" variable nil nil [4842 5384]) ("cygwin-mount-cygwin-bin-directory" variable (:user-visible-flag t) nil [5403 5703]) ("cygwin-mount-build-mount-table-asynch" variable (:user-visible-flag t) nil [5705 5966]) ("cygwin-mount-table" variable (:user-visible-flag t :default-value t) nil [5968 6923]) ("cygwin-mount-executable-binary-suffixes" variable (:default-value (if (memq system-type (quote (ms-dos windows-nt))) (quote (".exe" ".com" ".bat" ".cmd" ".btm" "")) (quote ("")))) nil [7021 7173]) ("cygwin-mount-executable-find" function (:arguments ("command")) nil [7174 7910]) ("cygwin-mount-get-full-progname" function (:arguments ("program")) nil [7926 8528]) ("cygwin-mount-get-cygdrive-prefix" function nil nil [8530 10032]) ("trim-trailing-whitespace" function (:arguments ("str")) nil [10034 10152]) ("cygwin-mount-parse-one-line" function (:arguments ("line")) nil [10154 10892]) ("cygwin-mount-parse-mount" function nil nil [10894 12202]) ("cygwin-mount-sentinel" function (:arguments ("proc" "msg")) nil [12204 12605]) ("cygwin-mount-build-table-internal" function nil nil [12607 13741]) ("cygwin-mount-name-hook-function" function (:arguments ("operation" "&rest" "args")) nil [13743 13975]) ("cygwin-mount-map-drive-hook-function" function (:arguments ("operation" "&rest" "args")) nil [13977 14219]) ("cygwin-mount-run-real-handler" function (:arguments ("operation" "args")) nil [14221 14600]) ("cygwin-mount-name-expand" function (:arguments ("operation" "name" "&rest" "args")) nil [14603 15042]) ("cygwin-mount-substitute-longest-mount-name" function (:arguments ("name")) nil [15044 16646]) ("cygwin-mount-cygwin-style1-regexp" variable (:constant-flag t :default-value "^/[^:@]*$\\|^/|/[^/:]+\\(\\'\\|/\\)") nil [16666 16748]) ("cygwin-mount-cygwin-style2-regexp" variable (:constant-flag t :default-value "^//[A-Za-z]/") nil [16880 16939]) ("cygwin-mount-cygwin-style3-regexp" variable nil nil [16984 17030]) ("cygwin-mount-convert-file-name" function (:arguments ("name")) nil [17527 18286]) ("cygwin-mount-map-drive" function (:arguments ("operation" "name" "&rest" "args")) nil [18288 19095]) ("if" code nil nil [19340 19396]) ("cygwin-mount-original-ange-ftp-handler" variable (:constant-flag t :default-value (if (featurep (quote ange-ftp)) (symbol-function (quote ange-ftp-run-real-handler)) nil)) nil [19469 19606]) ("cygwin-mount-ange-ftp-run-real-handler" function (:arguments ("operation" "args")) nil [19856 20316]) ("cygwin-mount-activated" variable nil nil [20336 20371]) ("cygwin-mount-activate" function (:user-visible-flag t) nil [20372 22529]) ("cygwin-mount-deactivate" function (:user-visible-flag t) nil [22549 23992]) ("cygwin-mount" package nil nil [23994 24017]))
    :file "cygwin-mount.el"
    :pointmax 24049
    )
   (semanticdb-table "show-wspace.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("and" code nil nil [4364 4430]) ("defgroup" code nil nil [4473 5260]) ("show-ws-tab" variable (:user-visible-flag t :default-value (quote ((t (:background "Gold"))))) nil [5262 5438]) ("show-ws-trailing-whitespace" variable (:user-visible-flag t :default-value (quote ((t (:background "LemonChiffon"))))) nil [5440 5641]) ("show-ws-hard-space" variable (:user-visible-flag t :default-value (quote ((t (:background "PaleGreen"))))) nil [5643 5836]) ("show-ws-highlight-tabs-p" variable nil nil [5839 5944]) ("show-ws-highlight-trailing-whitespace-p" variable nil nil [5946 6067]) ("show-ws-highlight-hard-spaces-p" variable nil nil [6069 6187]) ("defalias" code nil nil [6204 6266]) ("show-ws-toggle-show-tabs" function (:user-visible-flag t) nil [6282 6733]) ("defalias" code nil nil [6750 6826]) ("show-ws-toggle-show-hard-spaces" function (:user-visible-flag t) nil [6842 7415]) ("defalias" code nil nil [7432 7528]) ("show-ws-toggle-show-trailing-whitespace" function (:user-visible-flag t) nil [7544 8165]) ("show-ws-highlight-tabs" function nil nil [8167 8301]) ("show-ws-highlight-hard-spaces" function nil nil [8302 8475]) ("show-ws-highlight-trailing-whitespace" function nil nil [8476 8665]) ("show-wspace" package nil nil [8692 8714]))
    :file "show-wspace.el"
    :pointmax 8816
    :unmatched-syntax 'nil
    )
   (semanticdb-table "gitsum.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("cl" include nil nil [374 387]) ("cl" include nil nil [374 387]) ("gitsum-reuse-buffer" variable (:default-value t) nil [390 572]) ("easy-mmode-defmap" code nil nil [574 945]) ("define-derived-mode" code nil nil [947 1392]) ("define-key" code nil nil [1394 1458]) ("define-key" code nil nil [1459 1517]) ("define-key" code nil nil [1518 1576]) ("when" code nil nil [1622 1728]) ("gitsum-undo" function (:user-visible-flag t) nil [1778 1979]) ("gitsum-refresh" function (:user-visible-flag t :arguments ("&optional" "arguments")) nil [1981 2719]) ("gitsum-kill-dwim" function (:user-visible-flag t) nil [2721 3175]) ("gitsum-commit" function (:user-visible-flag t) nil [3177 3917]) ("gitsum-amend" function (:user-visible-flag t) nil [3919 4371]) ("gitsum-push" function (:user-visible-flag t) nil [4373 4698]) ("gitsum-revert" function (:user-visible-flag t) nil [4700 5131]) ("gitsum-do-commit" function (:user-visible-flag t) nil [5133 5578]) ("gitsum-kill-buffer" function (:user-visible-flag t) nil [5580 5788]) ("gitsum-switch-to-git-status" function (:user-visible-flag t) nil [5790 5903]) ("gitsum-switch-from-git-status" function (:user-visible-flag t) nil [5905 6267]) ("gitsum-find-buffer" function (:arguments ("dir")) nil [6269 6845]) ("gitsum" function (:user-visible-flag t) nil [6847 7216]) ("eval-after-load" code nil nil [7238 7327]) ("gitsum" package nil nil [7329 7346]))
    :file "gitsum.el"
    :pointmax 7347
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0pre4"
  :semanticdb-version "2.0pre4"
  )
